{"ast":null,"code":"var _jsxFileName = \"/Users/krunoslavstefanovski/Projects/react/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => console.log(users));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: monster.name\n      }, monster.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/krunoslavstefanovski/Projects/react/my-app/src/App.js"],"names":["React","App","Component","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","console","log","render","map","monster","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAKA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEMG,KAAK,IACPC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHJ;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEQ,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwBC,OAAO,iBAC3B;AAAA,kBAAsBA,OAAO,CAACC;AAA9B,SAASD,OAAO,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA1B6B;;AA6BlC,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => (response.json()))\n        .then(users => (\n            console.log(users)\n        ))\n    }\n\n    render() {\n        return(\n            <div className=\"App\">\n                {\n                    this.state.monsters.map(monster => (\n                        <h1 key={monster.id}>{monster.name}</h1>\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}